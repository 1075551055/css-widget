body{
	background: #f5f5f5;
}

/* 版心 */
.main_content {
	/* 根据当前现状，移动端一般最大到640px,最小320px,这样设置以免设备太大或者太小的时候造成页面布局混乱 */
	max-width: 640px;
	min-width: 320px;
	margin: 0 auto;
	width: 100%;
}

/* 头部 搜索*/
.search {
	/* 小技巧：在search_box外面再套一层div做固定定位，可以让search_box居中显示。假如没有这一层，只在search_box上做固定定位并且100%宽度
	则无法做到居中显示，因为固定定位对相对body来说的，无论是宽度还是定位，可以把.search的样式全放在search_box上尝试一下效果 */
	position: fixed;
	width: 100%;
	height: 40px;
	left: 0;
	top: 0;
	z-index: 500;
}
.search_box{
	max-width: 640px;
	min-width: 320px;
	margin: 0 auto;
	width: 100%;
	height: 40px;
	background: rgba(201,21,35,0.85);
	position: relative;
}

.search_box .icon_logo{
	position: absolute;
	left: 10px;
	top: 4px;
	width: 60px;
	height: 36px;
	/* background: 图片地址 是否repeat 位置：x与y / 图片大小：宽高; */
	background: url("../images/sprites.png") no-repeat 0 -103px / 200px 200px;
}

.search_box form {
	/* 技巧：先设置宽度100%，然后设置padding值，那么剩下的就是内容的宽度了，这样就能做到自适应了 -->因为是盒子模型是: border-box; */
	width: 100%;
	padding-left:70px;
	padding-right:50px;
	position: relative;

}
.search_box form .icon_search{
	position: absolute;
	left: 80px;
	top: 10px;
	width: 20px;
	height: 20px;
	background: url("../images/sprites.png") no-repeat -60px -109px / 200px 200px;
}

.search_box form input{
	padding-left: 40px;
	border-radius: 5px;
	height: 30px;
	margin-top: 5px;
	width: 100%;
}

.search_box .login{
	position: absolute;
	right: 0;
	top: 0;
	text-align: center;
	color: #fff;
	width: 50px;
    height: 40px;
	/* 单行文字垂直居中 */
	line-height: 40px;
}

/* banner轮播广告*/

.banner{
	width: 100%;
	position: relative;
	overflow: hidden;
}

.banner ul:first-child{
	width: 1000%;
}

.banner ul:first-child li{
	/* 父元素内容大小的10%。 是相对父元素的内容宽度来说的 */
	width: 10%;
	float: left;
}

.banner ul:first-child li a{
	width: 100%;
	/* 让img撑大a标签 */
	display: block;

}

.banner ul:first-child li a img{
	width: 100%;
	/* 解决间隙问题。与父元素a有一定的间隙。 解决间隙有三种方法：1.父元素font-size: 0px;2.设置文字垂直对其方式，virtual-align: center;3.转成块级元素，快捷元素不存在间隙问题 */
	display: block;
}

.banner ul:last-child {
	/* 因为父元素用了overflow:hidden, 假如该元素的定位偏离了父元素就看不见了，这也是清除浮动使用overflow:hidden的缺点之一; */
	position: absolute;
	/* 相对自身宽度的50% */
	transform: translateX(-50%);
	left: 50%;
	bottom: 10px;
}

.banner ul:last-child li.current{
	background-color: #fff;
}

.banner ul:last-child li{
	float: left;
	width: 10px;
	height: 10px;
	border: 1px solid #fff;
	border-radius: 5px;
	margin-left: 10px;
}

/* 编码技巧：先把css选择器逐个逐个全部写出来，然后再添加样式，这样就不会出现混乱了 */
/* nav导航栏 */
.nav{
	width: 100%;
	background: #fff;
}

.nav ul{
	width: 100%;
	padding-top: 10px;
	padding-bottom: 10px;
	border-bottom: 1px solid #ccc;
}

.nav ul li{
	float: left;
	/* li宽度够大,则会把其他四个挤到下一行 */
	width: 25%;
}

.nav ul li a{
	width: 100%;
	display: block;
}

.nav ul li a img{
	width: 40px;
	height: 40px;
	display: block;
	/* 盒子居中显示，因为设置了display：block，类似div居中显示 */
	margin: 0 auto;
}

.nav ul li p{
	 text-align: center;
	 /* 考虑字体大小，颜色等 */
	 font-size: 12px;
	 color: #666;
	 padding: 5px 0;
}